####################################################
# application.properties for LOCAL PostgreSQL instance DEV
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.name=conference-demo
#spring.datasource.port=5432
#spring.datasource.url=${DB_URL}
#spring.datasource.url=jdbc:postgresql://localhost:5432/conference-demo
#spring.datasource.username=postgres
#spring.datasource.password=xxxx1900

####################################################
# application.properties for Cloud Heroku PostgreSQL instnace PROD
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.name=dai0lecjnptsjb
spring.datasource.port=5432
spring.datasource.url=jdbc:postgresql://ec2-107-23-76-12.compute-1.amazonaws.com:5432/dai0lecjnptsjb
spring.datasource.username=vicqkvnveokqnf
spring.datasource.password=


# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
# spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

spring.jpa.hibernate.show_sql=true
# spring.jpa.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#server start port for SpringBoot Application - sever.port property is setup in application.yml
#server.port=5000

# Application version
app.version=1.0.0

# Application deployment type
app.deployment.type=DEV

# Application description
app.description=Conference Demo Application using Spring Boot Framework

# Company name
company.owner=Jomo Technologies

app.status.running=RUNNING

app.sessions.api.context.path=api/v1/sessions
app.speakers.api.context.path=api/v1/speakers
app.config.api.context.path=api/v1/config
app.error-status.api.context.path=api/v1/error-status
app.home.api.context.path=api/v1/home
app.status.api.context.path=api/v1/status

app.error.message=APPLICATION ERROR for onference Demo Application using Spring Boot Framework

#Actuator
# management.endpoints.web.exposure.include=info,health,metrics,loggers,beans,mappings
# management.endpoint.health.show-details=always